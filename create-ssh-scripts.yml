- hosts: 127.0.0.1
  connection: local
  gather_facts: false
  vars:
    - dest_dir: "."
  tasks:
    - name: Collect minimal facts
      setup:
        gather_subset:
          - '!all'
      delegate_to: localhost

    # - name: DEBUG
    #   debug:
    #     var: hostvars[item]['ansible_ssh_common_args']
    #   loop: "{{ groups['all'] }}"
    #   when: hostvars[item]['ansible_ssh_common_args'] is defined

    - name: Run python script with ansible interpreter
      script: "{{ playbook_dir }}/ssh-args-to-config.py {{ hostvars[item]['ansible_ssh_common_args'] }}"
      args:
        executable: "{{ansible_python.executable}}"
      delegate_to: localhost
      register: ssh_config_r
      loop: "{{ groups['all'] }}"
      when: hostvars[item]['ansible_ssh_common_args'] is defined
      ignore_errors: true

    #- name: DEBUG
    #  debug:
    #    var: ssh_config_r

    - name: Populate ssh config
      set_fact:
        ssh_config_valid: "{{ ssh_config_valid | default({}) | combine({item.item: (not item.changed or item.rc == 0)}) }}"
        ssh_config_all_valid: "{{ (ssh_config_all_valid | default(true)) and (not item.changed or item.rc == 0) }}"
        ssh_config: |-
          {{ ssh_config | default({}) |
             combine( {item.item:
                         item.stdout if item.changed and item.rc == 0 else '# ansible_ssh_common_args variable is not defined for host %s' | format(item.item)
                      }
                    )
          }}
      loop: "{{ ssh_config_r.results }}"

    - name: Create ssh config file in ssh-config
      copy:
        content: |
          {% for host in groups['all'] %}
          {% if ssh_config_valid[host] %}

            {% if hostvars[host]['ansible_connection'] | default('ssh', true) == 'ssh' %}
              {% if hostvars[host]['ansible_host'] is not defined and hostvars[host]['ansible_ssh_host'] is defined %}
              {% set ansible_host = hostvars[host]['ansible_ssh_host'] %}
              {% else %}
              {% set ansible_host = hostvars[host]['ansible_host'] | mandatory %}
              {% endif %}
              {% if hostvars[host]['ansible_user'] is not defined and hostvars[host]['ansible_ssh_user'] is defined %}
              {% set ansible_user = hostvars[host]['ansible_ssh_user'] %}
              {% else %}
              {% set ansible_user = hostvars[host]['ansible_user'] | mandatory %}
              {% endif %}
              {% set ansible_port = hostvars[host]['ansible_port'] | default(22, true) %}
              {% set ansible_ssh_private_key_file = hostvars[host]['ansible_ssh_private_key_file'] | mandatory %}

          Host {{ host }}
            HostName {{ ansible_host }}
            {% if '{{' not in ansible_user and '{%' not in ansible_user -%}
            User {{ ansible_user }}
            {% else -%}
            # Error: ansible_user variable cannot be evaluated
            {% endif -%}
            {% if '{{' not in (ansible_port|string) and '{%' not in (ansible_port|string) -%}
            Port {{ ansible_port }}
            {% else -%}
            # Error: ansible_port variable cannot be evaluated
            {% endif -%}
            UserKnownHostsFile /dev/null
            StrictHostKeyChecking no
            PasswordAuthentication no
            {% if '{{' not in ansible_ssh_private_key_file and '{%' not in ansible_ssh_private_key_file -%}
            IdentityFile {{ ansible_ssh_private_key_file }}
            {% else -%}
            # Error: ansible_ssh_private_key_file variable cannot be evaluated
            {% endif -%}
            {% if ssh_config[host] is defined %}
          {{ ssh_config[host] }}
            {% endif %}
            {% endif %}
          {% else %}

          # WARNING: Host {{ host }}:
          #   There was an error while converting ansible_ssh_common_args variable of host {{ host }}
          #   to the SSH configuration with ssh-args-to-config.py script
          #   Possibly some variables are undefined !

          {% endif %}
          {% endfor %}
        dest: "{{ dest_dir }}/ssh-config"
        mode: 0600
    - name: Create run-ssh, run-scp and run-sftp scripts
      copy:
        content: |
          #!/bin/bash
          THIS_DIR=$( (cd "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P) )
          set -xe
          {{item}} -F "$THIS_DIR/ssh-config" "$@"
        dest: "{{ dest_dir }}/run-{{item}}.sh"
        mode: 0755
      loop:
        - ssh
        - scp
        - sftp
    - name: Create rsync script in run-rsync.sh
      copy:
        content: |
          #!/bin/bash
          THIS_DIR=$( (cd "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P) )
          RSH="ssh -F '$THIS_DIR/ssh-config'"
          set -xe
          rsync -avhe "$RSH" --stats --progress "$@"
        dest: "{{ dest_dir }}/run-rsync.sh"
        mode: 0755
    - debug:
        msg: "Scripts are in directory {{ dest_dir }}"
