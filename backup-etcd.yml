- hosts: "{{ groups['etcd'] | first }}"
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  become: true
  tags:
    - etcd
  roles:
    - { role: kubespray-defaults}
  vars:
    etcd_backup_dir: "./etcd_backup"
  vars_files:
    - roles/etcd/defaults/main.yml
  handlers:
    - import_tasks: roles/etcd/handlers/backup.yml
  tasks:

    - name: Configure | Check if etcd cluster is healthy
      shell: "{{ bin_dir }}/etcdctl --endpoints={{ etcd_access_addresses }} cluster-health | grep -q 'cluster is healthy'"
      register: etcd_cluster_is_healthy
      ignore_errors: true
      changed_when: false
      check_mode: no
      when: is_etcd_master
      tags:
        - facts
      environment:
        ETCDCTL_CERT_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}.pem"
        ETCDCTL_KEY_FILE: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}-key.pem"
        ETCDCTL_CA_FILE: "{{ etcd_cert_dir }}/ca.pem"

    - name: Backup all etcd data
      command: /bin/true
      notify:
        - Backup etcd data

    - meta: flush_handlers

    - debug:
        var: etcd_backup_directory

    - name: Create temporary backup directory
      tempfile:
        state: directory
        suffix: _etcd_backup
      register: etcd_tmp_backup_dir

    - name: Set backup file name
      set_fact:
        backup_file_name: >-
          {{ 'etcd-backup-%s-%s.tar.gz' |
          format(inventory_hostname,
          lookup('pipe', 'date +%Y%m%d-%H%M') | trim)
          }}

    - name: Create etcd backup tarball
      command: >-
        tar -cvf {{ etcd_tmp_backup_dir.path | quote }}/{{ backup_file_name | quote }}
        -C {{ etcd_backup_directory }} .
      args:
        warn: false

    - name: Copy etcd backup tarball to ansible host
      fetch:
        src: "{{ etcd_tmp_backup_dir.path }}/{{ backup_file_name }}"
        dest: "{{ etcd_backup_dir }}/{{ backup_file_name }}"
        flat: yes
        validate_checksum: no

    - name: Remove temporary backup directory {{ etcd_tmp_backup_dir.path }}
      file:
        path: "{{ etcd_tmp_backup_dir.path }}"
        state: absent

    - name: Print backup file
      debug:
        msg: "Etcd backup is stored in file {{ etcd_backup_dir }}/{{ backup_file_name }}"

