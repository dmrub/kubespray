---
- name: Check ansible version
  import_playbook: ansible_version.yml

- hosts: "{{ groups['etcd'] | first }}"
  any_errors_fatal: "{{ any_errors_fatal | default(true) }}"
  become: true
  tags:
    - etcd
  roles:
    - { role: kubespray-defaults}
  vars:
    etcd_backup_dir: "./etcd_backup"
  vars_files:
    - roles/etcd/defaults/main.yml
  handlers:
    - import_tasks: roles/etcd/handlers/backup.yml
  tasks:

    # - import_tasks: roles/etcd/tasks/set_cluster_health.yml

    - name: Configure | Check if etcd cluster is healthy  # noqa 306
      shell: "{{ bin_dir }}/etcdctl endpoint --cluster status && {{ bin_dir }}/etcdctl endpoint --cluster health  2>&1 | grep -q -v 'Error: unhealthy cluster'"
      register: etcd_cluster_is_healthy
      failed_when: false
      changed_when: false
      check_mode: no
      run_once: yes
      when: is_etcd_master
      tags:
        - facts
      environment:
        ETCDCTL_API: 3
        ETCDCTL_CERT: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}.pem"
        ETCDCTL_KEY: "{{ etcd_cert_dir }}/admin-{{ inventory_hostname }}-key.pem"
        ETCDCTL_CACERT: "{{ etcd_cert_dir }}/ca.pem"
        ETCDCTL_ENDPOINTS: "{{ etcd_access_addresses }}"

    - name: Backup all etcd data
      command: /bin/true
      notify:
        - Backup etcd data

    - meta: flush_handlers

    - debug:
        var: etcd_backup_directory

    - name: Create etcd backup tarball
      command: "tar -cvzf /tmp/etcd-backup-{{ inventory_hostname }}.tar.gz -C {{ etcd_backup_directory }} ."

    - name: Copy etcd backup tarball to ansible host
      fetch:
        src: "/tmp/etcd-backup-{{ inventory_hostname }}.tar.gz"
        dest: "{{ etcd_backup_dir }}/etcd-backup-{{ inventory_hostname }}.tar.gz"
        flat: yes
        validate_checksum: no
      become: no

    - name: Remove etcd backup tarball
      file:
        path: "/tmp/etcd-backup-{{ inventory_hostname }}.tar.gz"
        state: absent
